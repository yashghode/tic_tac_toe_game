# -*- coding: utf-8 -*-
"""tic tac toe game.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15eonJBGx5kVJE-5f9zyGN3PzFEfkBIny
"""

import os

def clear_console():
    os.system('cls' if os.name == 'nt' else 'clear')

def draw_board(board):
    clear_console()
    print("     |     |")
    print("  \033[1;31m{}\033[0m  |  \033[1;34m{}\033[0m  |  \033[1;31m{}\033[0m".format(board[0], board[1], board[2]))
    print("_____|_____|_____")

    print("     |     |")

    print("  \033[1;34m{}\033[0m  |  \033[1;31m{}\033[0m  |  \033[1;34m{}\033[0m".format(board[3], board[4], board[5]))
    print("_____|_____|_____")

    print("     |     |")

    print("  \033[1;31m{}\033[0m  |  \033[1;34m{}\033[0m  |  \033[1;31m{}\033[0m".format(board[6], board[7], board[8]))
    print("     |     |")

def get_player_choice(player_name, board):
    while True:
        choice = input("{}'s turn. Please choose a position (1-9): ".format(player_name))

        if choice.isdigit() and int(choice) in range(1, 10):
            index = int(choice) - 1
            if board[index] == " ":
                return index
        print("Invalid input. Please try again.")

def check_winner(board):
    for i in range(0, 9, 3):
        if board[i] == board[i + 1] == board[i + 2] != " ":
            return True, board[i]

    for i in range(3):
        if board[i] == board[i + 3] == board[i + 6] != " ":
            return True, board[i]

    if board[0] == board[4] == board[8] != " ":
        return True, board[0]

    if board[2] == board[4] == board[6] != " ":
        return True, board[2]

    if " " not in board:
        return True, "tie"

    return False, ""

def play_game():
    board = [" " for i in range(9)]
    player_names = ["Player 1", "Player 2"]
    player_symbols = ["\033[1;31mX\033[0m", "\033[1;34mO\033[0m"]

    draw_board(board)

    while True:
        for i in range(2):
            index = get_player_choice(player_names[i], board)
            board[index] = player_symbols[i]
            draw_board(board)

            winner_found, winner_symbol = check_winner(board)
            if winner_found:
                if winner_symbol == "tie":
                    print("It's a tie!")
                else:
                    print("{} wins!".format(player_names[player_symbols.index(winner_symbol)]))
                return

if __name__ == "__main__":
    play_game()